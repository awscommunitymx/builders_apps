name: PR Deployment and Cleanup

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

env:
  AWS_REGION: "us-east-1"

# Required permissions for OIDC authentication
permissions:
  id-token: write
  contents: read

jobs:
  # Job for PR opened/reopened/synchronized events
  DeployPR:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          check-latest: true
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHub_PR_Deployment
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Install project dependencies
        run: |
          npm ci || npm install
          npm install aws-cdk-lib @aws-cdk/aws-lambda @aws-cdk/aws-s3 --save
          npm install @types/node --save-dev
          
      - name: Run deployment script
        run: |
          chmod +x ./scripts/deploy.sh
          ./scripts/deploy.sh

  # Job for PR closed events
  CleanupPR:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          check-latest: true
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHub_PR_Cleanup
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Install project dependencies
        run: |
          npm ci || npm install
          npm install aws-cdk-lib @aws-cdk/aws-lambda @aws-cdk/aws-s3 --save
          npm install @types/node --save-dev
          
      - name: Run cleanup script
        run: |
          chmod +x ./scripts/deploy.sh
          ./scripts/deploy.sh --destroy
